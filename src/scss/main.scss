// This is where you can import other stylesheets or write your scss code
@import "../../node_modules/bootstrap/scss/bootstrap";
* {
  box-sizing: border-box !important;
}
$enable-responsive-font-sizes: true;
$grid-columns: 14;
$grid-gutter-width: 0px;

@mixin center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin delay($rule, $number, $value) {
  @for $i from 1 to ($number) {
    &:nth-child(#{$i}) {
      -webkit-#{$rule}-delay: (#{$i * $value});
      #{$rule}-delay: (#{$i * $value});
    }
  }
}

@mixin long-shadow(
  $type,
  $color,
  $length,
  $fadeout: true,
  $skew: false,
  $direction: right
) {
  $shadow: "";
  @if $skew == false or $type == text {
    @if $direction == right {
      @for $i from 0 to $length - 1 {
        $shadow: $shadow + $i + "px " + $i + "px 0 " + $color + ",";
      }
    }
    @if $direction == left {
      @for $i from 0 to $length - 1 {
        $shadow: $shadow + $i * -1 + "px " + $i + "px 0 " + $color + ",";
      }
    }
  }

  @if $fadeout == true {
    @for $i from 1 to $length - 1 {
      @if $type == text or $skew == false {
        @if $direction == right {
          $shadow: $shadow +
            $i +
            "px " +
            $i +
            "px 0 " +
            rgba($color, 1 - $i / $length) +
            ",";
        }
        @if $direction == left {
          $shadow: $shadow +
            $i *
            -1 +
            "px " +
            $i +
            "px 0 " +
            rgba($color, 1 - $i / $length) +
            ",";
        }
      }
      @if ($type == box) and $skew == true {
        @if $direction == right {
          $shadow: $shadow +
            $i +
            "px " +
            $i +
            "px 0 " +
            $i *
            0.2 +
            "px " +
            rgba($color, 1 - $i / $length) +
            ",";
        }
        @if $direction == left {
          $shadow: $shadow +
            $i *
            -1 +
            "px " +
            $i +
            "px 0 " +
            $i *
            0.2 +
            "px " +
            rgba($color, 1 - $i / $length) +
            ",";
        }
      }
    }
    $shadow: $shadow + $length + "px " + $length + "px 0 " + rgba($color, 0);
  }
  @if $fadeout == false {
    @if $skew == true and ($type == box) {
      @for $i from 0 to $length - 1 {
        $shadow: $shadow +
          $i +
          "px " +
          $i +
          "px 0 " +
          $i *
          0.1 +
          "px " +
          $color +
          ",";
      }
    }
    $shadow: $shadow + $length + "px " + $length + "px 0 " + rgba(0, 0, 0, 0);
  }
  $shadow: unquote($shadow);
  @if $type == "box" {
    box-shadow: $shadow;
  }
  @if $type == "text" {
    text-shadow: $shadow;
  }
}
$color-passive: hsl(210, 100%, 20%);
$color-active: hsl(194, 100%, 47%);
$color-button: orange;
$font-header: "Orbitron";
$font-second: monospace;
@mixin font-shadow {
  text-shadow: hsla(0, 0%, 40%, 0.5) 0 -1px 0, hsla(0, 0%, 100%, 0.6) 0 2px 1px;
}

@mixin etch-shadow {
  box-shadow: hsla(0, 0%, 40%, 0.5) 0 -1px 0, hsla(0, 0%, 100%, 0.6) 0 2px 1px;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-header;
  @include font-shadow;
}

* {
  font-family: $font-second;
  color: rgb(54, 54, 54);
}
html {
  background-color: $color-active;
}
body {
  position: relative;
  width: 100%;
  background-color: $color-active;
}
.jumbotron {
  background-color: $color-active;
}
section {
  height: 90vh;
  background-color: $color-active;
}
.hero {
  margin-top: 150px;
}
#myScrollSpy {
  position: fixed;
  right: 0;
  height: 100vh;
  z-index: 2;
  background-color: $color-passive;
}

.nav-link {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  width: 50px;
  height: 50px;
  background-color: $color-button;
  transition: all 0.2s ease-in-out;
  transform: scale(0.7);
  padding: 20px;
}
.links {
  font-size: 1.4rem;
}
i {
  font-size: 1.3em;
  @include font-shadow;
  color: $color-passive;
}
i:hover {
  color: $color-active;
}

.links i {
  font-size: 3rem;
}

.active {
  transform: scale(0.9);
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.486),
    0px 0px 15px rgba(0, 0, 0, 0.534);
}

.active i {
  color: $color-active;
  text-shadow: 0px 0px 5px rgb(255, 255, 255);
}
.links:active {
  transform: scale(0.6);
  box-shadow: none;
}

.display-4 {
  font-family: $font-header;
  color: $color-button;
  @include long-shadow(text, rgb(110, 72, 0), 5, false, true, right);
}

.d-flex {
  background-color: $color-button;
  @include long-shadow(box, rgb(110, 72, 0), 5, false, true, right);
}
svg {
  overflow: hidden;
}
.red-bar {
  animation: first-svg-animation 0.8s linear infinite;
  @include delay(animation, 14, 0.2s);
  opacity: 0;
}

.square {
  opacity: 0;
  animation: second-svg-animation 1s linear infinite;
}

@keyframes first-svg-animation {
  to {
    opacity: 1;
  }
}

@keyframes second-svg-animation {
  to {
    opacity: 1;
  }
}
.shadowc {
  position: absolute;
  width: 100%;
  height: 10%;
  background-color: rgb(54, 54, 54);
  bottom: -50px;
  transform: rotateX(60deg);
  border-radius: 30%;
  filter: blur(15px);
  transition: all 0.3s ease-in-out;
}
.pro {
  background: linear-gradient(rgb(187, 33, 33), rgb(37, 56, 163));
  margin: 0;
  z-index: 3;
  position: relative;
  transform: scale(0.9);
  transition: all 0.3s ease-in-out;

  @include long-shadow(box, rgb(0, 149, 194), 20, false, false, left);
  border: 3px outset rgba(255, 255, 255, 0.521);

  &::after {
    content: "";
    width: 100%;
    height: 0%;
    background-color: $color-passive;
    position: absolute;
    bottom: 0;
    display: block;
    transition: all 0.3s ease-in-out;
  }

  &::before {
    content: "";
    width: 100%;
    height: 0%;
    background-color: $color-button;
    position: absolute;
    top: 0;
    display: block;
    transition: all 0.3s ease-in-out;
  }

  &:hover::after {
    height: 40%;
  }
  &:hover::before {
    height: 60%;
  }
}

#projects {
  display: flex;
  justify-content: space-evenly;
  margin-top: 200px;
}
.projects-container {
  display: grid;
  grid-template: repeat(3, auto) / repeat(3, auto);
  height: 100%;

  width: 50%;
}

.lead,
p {
  @include font-shadow;
  color: $color-passive;
}

.projects-header {
  color: $color-passive;
  padding: 0;
  padding: 10px;
}

@mixin center-image {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

.project1 {
  background: url(/images/proccessing.gif);
  @include center-image;
}
.project2 {
  background: url(/images/bennys-burger.gif);
  @include center-image;
}

.project3 {
  background: url(/images/grid-message.gif);
  @include center-image;
}

.project4 {
  background: url(/images/responsive-hero.gif);
  @include center-image;
}
.project5 {
  background: url(/images/city-trips.gif);
  @include center-image;
}

.project6 {
  background: url(/images/kpi-list.gif);
  @include center-image;
}
.project7 {
  background: url(/images/ball-animation.gif);
  @include center-image;
}
.project8 {
  background: url(/images/author-card.gif);
  @include center-image;
}

.project9 {
  background: url(/images/random-bars.gif);
  @include center-image;
}

.project10 {
  background: url(/images/travel-form.gif);
  @include center-image;
}

.gear {
  animation: turn 1s linear infinite;
  width: 70%;
}
.icon-container i {
  font-size: 5em;
}

.icon-container {
  display: flex;
  justify-content: space-evenly;
  background-color: $color-button;
  @include long-shadow(box, rgb(110, 72, 0), 5, false, true, right);
}

.circle {
  opacity: 0;
}

@keyframes turn {
  to {
    transform: rotateZ(45deg);
  }
}
